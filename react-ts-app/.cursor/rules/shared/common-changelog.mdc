---
description: 本规范定义了项目 changelog 的标准化管理流程，包括格式规范、更新流程、自动化工具使用和版本发布规范。旨在帮助开发团队维护清晰、一致、易于理解的版本变更记录，提高项目的可维护性和用户体验。
globs: 
alwaysApply: false
---
# Changelog 管理规范

## 文件结构
Changelog 文件位于项目根目录下的 [CHANGELOG.md](mdc:CHANGELOG.md)，与 [package.json](mdc:package.json) 中的版本号保持同步。

## 格式规范

### 基本结构
```markdown
# Changelog

所有重要的项目变更都会记录在此文件中。

本项目遵循 [语义化版本控制](mdc:https:/semver.org/lang/zh-CN) 标准。

## [未发布]

### 新增
- 

### 变更
- 

### 修复
- 

### 移除
- 

## [1.0.0] - 2024-01-01

### 新增
- 初始版本发布
```

### 版本分类
- **未发布 (Unreleased)**: 尚未发布的变更
- **新增 (Added)**: 新功能
- **变更 (Changed)**: 对现有功能的变更
- **弃用 (Deprecated)**: 即将移除的功能
- **移除 (Removed)**: 已移除的功能
- **修复 (Fixed)**: 任何bug修复
- **安全 (Security)**: 修复安全问题

## 更新changelog
- 1. 检查 /package.json 当前包正式版本号是否符合正式包版本号（如 x.x.x）
- 2. npm info 查看是否已经存在正式包版本号
- 2. 如果正式版本已存在则自动+1 如(1.1.1 -> 1.1.2)
- 3. 更新 /docs/CHANGELOG.md 文件，新增内容格式如下：
```
## [<版本号>]()

日期：date +%Y-%m-%d 获取最新的日期,格式为： `YYYY-MM-DD`

开发者：<git name>

- <GIT 提交描述信息>

分支：<分支名称>
```

## 编写指南

### 条目格式
- 使用现在时态：「添加功能」而不是「添加了功能」
- 以大写字母开头
- 不以句号结尾
- 包含相关的 Issue 或 PR 编号（如适用）

### 示例
```markdown
### 新增
- 添加用户身份证 OCR 识别功能
- 新增商户预审核信息表单验证
- 支持自主支付和受托支付模式选择

### 修复
- 修复身份证号码验证正则表达式错误
- 解决表单提交时的内存泄露问题

### 变更
- 优化图片上传组件性能
- 更新 Ant Design 至 4.24.10 版本
```

## 版本发布规范

### 语义化版本
遵循 MAJOR.MINOR.PATCH 格式：
- **MAJOR**: 不兼容的 API 修改
- **MINOR**: 向下兼容的功能性新增
- **PATCH**: 向下兼容的问题修正

## 注意事项
- 保持条目简洁明了，便于用户理解
- 重大变更需要详细说明迁移指南
- 定期整理和归档旧版本信息
- 与产品和测试团队协调，确保变更记录完整准确

