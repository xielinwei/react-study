---
description: 
globs: *.vue
alwaysApply: false
---
# ZZ-UI 组件库使用

## 🎯 核心目标
当生成Vue移动端页面代码时，优先使用ZZ-UI组件库，避免从零开始写HTML/CSS。

> **重要提醒**: 此文档仅为快速参考，详细API请查阅官方文档
> 
> - 官方文档: `node_modules/@zz-common/zz-ui/packages/[组件名]/zh-CN.md`
> - 官方Demo: `node_modules/@zz-common/zz-ui/packages/[组件名]/demo/index.vue`

## 📋 项目配置信息

> **配置说明**: 请根据当前项目实际情况填写以下配置信息

### 当前项目配置
- **当前版本**: @zz-common/zz-ui@`[请查看package.json]`
- **Vue版本**: `[请查看package.json中的vue版本]`
- **已全局注册**: `[请查看src/main.ts中实际注册的组件]`
- **按需加载**: 未全局注册的组件需要import导入后使用

### 如何获取实际配置信息：

```bash
# 1. 查看zz-ui版本
grep "@zz-common/zz-ui" package.json

# 2. 查看Vue版本  
grep "\"vue\"" package.json

# 3. 查看全局注册的组件（支持单行和多行导入）
cat src/main.ts | tr '\n' ' ' | grep -o 'import {[^}]*} from '\''@zz-common/zz-ui'\'''
```

## 🔧 常用组件速查

### Icon 图标
```vue
<!-- 使用转转 6.0图标 -->
<z-icon class-prefix="zziconfont" name="close" />

<!-- 自定义图片 -->
<z-icon name="297ce2ae-f7cb-4abf-867d-ba78bde25297.png" />
```

### Button 按钮
```vue
<!-- 基础用法 -->
<z-button>默认按钮</z-button>
<z-button type="primary" size="large">主要按钮</z-button>
<z-button type="gray" size="normal">置灰按钮</z-button>

<!-- 加载状态 -->
<z-button loading type="primary" loading-text="提交中..." size="small">提交</z-button>

<!-- 带图标 -->
<z-button icon="bell" class-prefix="zziconfont" type="primary">左侧图标</z-button>

<!-- 底部按钮组 -->
<z-button-group keep-position fixed>
  <z-button size="large">取消</z-button>
  <z-button size="large" type="primary">确认</z-button>
</z-button-group>
```

**重要属性**:
- `type`: 类型，可选值为default/primary/gray/ghost/info/text/link
- `size`: 尺寸，可选值为large/normal/small/small-detail
- `loading`: 是否显示为加载状态
- `disabled`: 是否禁用按钮

### Image 图片
```vue
<z-image width="200" height="200" px2rem lazy-load src="n_v255b2cf20d9b3405fa6fc930e89fb76f6.jpg" />
```

### Stance 占位图
```vue
<z-stance type="general" descText="暂无信息" />
```

### Loading 加载
```vue
<!-- 空白加载 -->
<z-loading type="zz" />
```

### NavBar 导航栏
```vue
<z-nav-bar 
  title="页面标题"
  left-arrow
  className="v9"
  @click-left="$router.back()"
>
  <template #right>
    <span class="z-nav-bar__text">功能</span>
  </template>
</z-nav-bar>

<!-- 配合FixTop使用实现页面顶部固定 -->
<z-fix-top keepPosition>
  <z-nav-bar title="页面标题" left-arrow />
</z-fix-top>
```

### Tabs 标签页
```vue
<z-tabs v-model="activeTab" sticky>
  <z-tab 
    v-for="tab in tabs" 
    :key="tab.name"
    :title="tab.title" 
    :name="tab.name"
  >
    {{ tab.content }}
  </z-tab>
</z-tabs>
```

### Field 输入框
```vue
<!-- 基础输入 -->
<z-field 
  v-model="value"
  label="姓名"
  placeholder="请输入姓名"
  clearable
  required
/>
```

### List 列表 + PullRefresh 下拉刷新
```vue
<z-pull-refresh v-model="refreshing" @refresh="onRefresh">
  <z-list 
    v-model="loading" 
    :finished="finished"
    finished-text="没有更多了"
    @load="onLoad"
  >
    <div v-for="item in list" :key="item.id" class="item">
      <!-- 列表项内容 -->
    </div>
  </z-list>
</z-pull-refresh>
```

### Upload 上传组件
```vue
<z-upload
  v-model="fileList"
  accept="image/*"
  multiple
  :max-count="9"
  :process-file="processFile"
  @file-success="handleSuccess"
  @file-error="handleError"
  capture
  weixin
/>
```

### ActionPicker 抽屉/半层
```vue
<z-action-picker
  v-model="show"
  title="标题"
  height="80vh"
  @close="$toast('关闭')"
>
  <div class="slot">内容区域</div>
</z-action-picker>
```

### Picker 选择器
```vue
<z-picker
  v-model="value"
  :columns="columns"
  title="请选择"
  @confirm="onConfirm"
  @cancel="onCancel"
/>
```

## 🎯 全局方法

### Toast 轻提示
```javascript
import { Toast } from '@zz-common/zz-ui'

// 成功提示
Toast.success('操作成功')

// 失败提示  
Toast.fail('操作失败')

// 加载提示
const toast = Toast.loading({
  message: '加载中...',
  forbidClick: true, // 禁用点击
  duration: 0 // 持续显示
})
// 手动关闭
toast.clear()
```

### Dialog 对话框
```javascript
import { Dialog } from '@zz-common/zz-ui'

// 确认对话框
Dialog.confirm({
  title: '提示',
  message: '确定要删除吗？'
}).then(() => {
  // 确认操作
}).catch(() => {
  // 取消操作
})
```

## 🎨 样式方案优先级

### 1. 优先使用组件内置属性
```vue
<!-- ✅ 最优：组件属性 -->
<z-button type="primary" size="large" btn-class="btn-class"></z-button>

<!-- ✅ 可接受：少量样式 -->
<z-button type="primary" style="margin-top: 20px;"></z-button>

<!-- ❌ 避免：大量自定义 -->
<z-button class="custom-complex-button"></z-button>
```


## 🔗 获取更多信息

当需要了解组件的完整API时，请使用以下命令：

```bash
# 查看组件文档
cat node_modules/@zz-common/zz-ui/packages/button/zh-CN.md

# 查看组件demo
cat node_modules/@zz-common/zz-ui/packages/button/demo/index.vue

# 搜索项目中的使用案例
grep -r "z-button" src/
``` 
